; ModuleID = 'Graphite'
source_filename = "Graphite"

%node_t = type { i8*, i1, i8* }

@n1 = global %node_t zeroinitializer
@0 = private unnamed_addr constant [3 x i8] c"me\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"this String\00", align 1
@2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@m1 = global i8* getelementptr inbounds ([1 x i8], [1 x i8]* @2, i32 0, i32 0)
@b = global i1 false
@3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@y = global i8* getelementptr inbounds ([1 x i8], [1 x i8]* @3, i32 0, i32 0)
@4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@name2 = global i8* getelementptr inbounds ([1 x i8], [1 x i8]* @4, i32 0, i32 0)
@fmt = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i8** getelementptr (i8*, i8** null, i32 1) to i32))
  %bruh = bitcast i8* %malloccall to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i8** %bruh, align 8
  %name = bitcast i8** %bruh to i8*
  store i8* %name, i8** getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 0), align 8
  store i1 false, i1* getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 1), align 1
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i8** getelementptr (i8*, i8** null, i32 1) to i32))
  %bruh2 = bitcast i8* %malloccall1 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0), i8** %bruh2, align 8
  %name3 = bitcast i8** %bruh2 to i8*
  store i8* %name3, i8** getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 2), align 8
  %n1.name = load i8*, i8** getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 0), align 8
  %name4 = bitcast i8* %n1.name to i8**
  %n1.name5 = load i8*, i8** %name4, align 8
  store i8* %n1.name5, i8** @m1, align 8
  %n1.flag = load i1, i1* getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 1), align 1
  %n1.flag6 = load i1, i1* getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 1), align 1
  store i1 %n1.flag6, i1* @b, align 1
  %n1.data = load i8*, i8** getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 2), align 8
  %name7 = bitcast i8* %n1.data to i8**
  %n1.data8 = load i8*, i8** %name7, align 8
  store i8* %n1.data8, i8** @y, align 8
  %n1.name9 = load i8*, i8** getelementptr inbounds (%node_t, %node_t* @n1, i32 0, i32 0), align 8
  %name10 = bitcast i8* %n1.name9 to i8**
  %n1.name11 = load i8*, i8** %name10, align 8
  store i8* %n1.name11, i8** @name2, align 8
  %y = load i8*, i8** @y, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i8* %y)
  ret i32 0
}

declare noalias i8* @malloc(i32)

define i32 @funky() {
entry:
  ret i32 1
}
