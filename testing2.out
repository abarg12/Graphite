; ModuleID = 'Graphite'
source_filename = "Graphite"

%node_t = type { i8*, i1, i8* }
%edge_t = type { %node_t*, %node_t*, i32 }

declare i32 @printf(i8*, ...)

declare i8* @array_get(i8*, i32, ...)

define i32 @main() {
entry:
  %main_result = call i32 @main.1()
  ret i32 0
}

define i32 @main.1() {
entry:
  %n1 = alloca %node_t, align 8
  %n2 = alloca %node_t, align 8
  %temp = getelementptr inbounds %node_t, %node_t* %n1, i32 0, i32 2
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %bruh = bitcast i8* %malloccall to i32*
  store i32 3, i32* %bruh, align 4
  %name1 = bitcast i32* %bruh to i8*
  store i8* %name1, i8** %temp, align 8
  %e2 = alloca %edge_t, align 8
  %n11 = load %node_t, %node_t* %n1, align 8
  %temp2 = getelementptr inbounds %edge_t, %edge_t* %e2, i32 0, i32 0
  %temp3 = getelementptr inbounds %edge_t, %edge_t* %e2, i32 0, i32 0
  store %node_t** %temp3, %node_t** %temp2, align 8
  %n24 = load %node_t, %node_t* %n2, align 8
  %temp5 = getelementptr inbounds %edge_t, %edge_t* %e2, i32 0, i32 1
  %temp6 = getelementptr inbounds %edge_t, %edge_t* %e2, i32 0, i32 0
  store %node_t** %temp6, %node_t** %temp5, align 8
  %n17 = load %node_t, %node_t* %n1, align 8
  %n4 = alloca %node_t, align 8
  store %node_t %n17, %node_t* %n4, align 8
  ret i32 1
}

declare noalias i8* @malloc(i32)
