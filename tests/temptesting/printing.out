; ModuleID = 'Graphite'
source_filename = "Graphite"

@0 = private unnamed_addr constant [8 x i8] c"3.1415\0A\00", align 1
@1 = private unnamed_addr constant [31 x i8] c"three point one four one five\0A\00", align 1
@2 = private unnamed_addr constant [3 x i8] c"3\0A\00", align 1
@3 = private unnamed_addr constant [3 x i8] c"1\0A\00", align 1
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@4 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i32 0, i32 0))
  %printf1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1, i32 0, i32 0))
  %printf2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0))
  %printf3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0))
  %a = alloca i32
  store i32 10, i32* %a
  %a4 = load i32, i32* %a
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %a4)
  %b = alloca double
  store double 1.234560e+02, double* %b
  %b6 = load double, double* %b
  %printf7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), double %b6)
  %c = alloca i8*
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i32 0, i32 0), i8** %c
  %c8 = load i8*, i8** %c
  %printf9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i8* %c8)
  %d = alloca i1
  store i1 true, i1* %d
  %d10 = load i1, i1* %d
  %printf11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.3, i32 0, i32 0), i1 %d10)
  ret i32 0
}
