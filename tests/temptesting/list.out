; ModuleID = 'Graphite'
source_filename = "Graphite"

@a = global double 0.000000e+00
@l = global i8* null
@l.1 = global [3 x i8*]* null
@b = global i32 0
@l2 = global [3 x i8*]* null
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @array_get(i8*, i32, ...)

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 mul (i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 3) to i32), i32 3))
  %array = bitcast i8* %malloccall to [3 x i8*]*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %arr_val = bitcast i8* %malloccall1 to double*
  store double 1.600000e+00, double* %arr_val
  %arr_idx = getelementptr inbounds [3 x i8*], [3 x i8*]* %array, i32 0, i32 0
  %val_ptr = bitcast double* %arr_val to i8*
  store i8* %val_ptr, i8** %arr_idx
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %arr_val3 = bitcast i8* %malloccall2 to double*
  store double 2.300000e+00, double* %arr_val3
  %arr_idx4 = getelementptr inbounds [3 x i8*], [3 x i8*]* %array, i32 0, i32 1
  %val_ptr5 = bitcast double* %arr_val3 to i8*
  store i8* %val_ptr5, i8** %arr_idx4
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %arr_val7 = bitcast i8* %malloccall6 to double*
  store double 3.500000e+00, double* %arr_val7
  %arr_idx8 = getelementptr inbounds [3 x i8*], [3 x i8*]* %array, i32 0, i32 2
  %val_ptr9 = bitcast double* %arr_val7 to i8*
  store i8* %val_ptr9, i8** %arr_idx8
  %arr_idx10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %array, i32 0, i32 1
  %value = load i8*, i8** %arr_idx10
  %li_conv = bitcast i8* %value to double*
  %val_ptr11 = load double, double* %li_conv
  store double %val_ptr11, double* @a
  store i32 1, i32* @b
  %malloccall12 = tail call i8* @malloc(i32 mul (i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 3) to i32), i32 3))
  %array13 = bitcast i8* %malloccall12 to [3 x i8*]*
  %malloccall14 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %arr_val15 = bitcast i8* %malloccall14 to i32*
  store i32 5, i32* %arr_val15
  %arr_idx16 = getelementptr inbounds [3 x i8*], [3 x i8*]* %array13, i32 0, i32 0
  %val_ptr17 = bitcast i32* %arr_val15 to i8*
  store i8* %val_ptr17, i8** %arr_idx16
  %malloccall18 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %arr_val19 = bitcast i8* %malloccall18 to i32*
  store i32 6, i32* %arr_val19
  %arr_idx20 = getelementptr inbounds [3 x i8*], [3 x i8*]* %array13, i32 0, i32 1
  %val_ptr21 = bitcast i32* %arr_val19 to i8*
  store i8* %val_ptr21, i8** %arr_idx20
  %malloccall22 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %arr_val23 = bitcast i8* %malloccall22 to i32*
  store i32 7, i32* %arr_val23
  %arr_idx24 = getelementptr inbounds [3 x i8*], [3 x i8*]* %array13, i32 0, i32 2
  %val_ptr25 = bitcast i32* %arr_val23 to i8*
  store i8* %val_ptr25, i8** %arr_idx24
  %b = load i32, i32* @b
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %b)
  ret i32 0
}

declare noalias i8* @malloc(i32)
