; ModuleID = 'Graphite'
source_filename = "Graphite"

@0 = private unnamed_addr constant [3 x i8] c"5\0A\00", align 1
@1 = private unnamed_addr constant [8 x i8] c"532905\0A\00", align 1
@2 = private unnamed_addr constant [3 x i8] c"0\0A\00", align 1
@3 = private unnamed_addr constant [3 x i8] c"1\0A\00", align 1
@4 = private unnamed_addr constant [8 x i8] c"3.1415\0A\00", align 1
@5 = private unnamed_addr constant [10 x i8] c"777.7777\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0))
  %printf1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0))
  %printf2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0))
  %printf3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0))
  %printf4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @4, i32 0, i32 0))
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @5, i32 0, i32 0))
  ret i32 0
}
