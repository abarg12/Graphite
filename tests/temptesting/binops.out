; ModuleID = 'Graphite'
source_filename = "Graphite"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.7 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %a = alloca i32
  store i32 1, i32* %a
  %b = alloca i32
  store i32 2, i32* %b
  %c = alloca i32
  store i32 3, i32* %c
  %c1 = load i32, i32* %c
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %c1)
  %c2 = load i32, i32* %c
  %c3 = load i32, i32* %c
  %d = add i32 %c2, %c3
  %d4 = alloca i32
  store i32 %d, i32* %d4
  %d5 = load i32, i32* %d4
  %printf6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %d5)
  %e = alloca double
  store double 0x400A666666666667, double* %e
  %f = alloca double
  store double 6.600000e+00, double* %f
  %e7 = load double, double* %e
  %f8 = load double, double* %f
  %g = fadd double %e7, %f8
  %g9 = alloca double
  store double %g, double* %g9
  %g10 = load double, double* %g9
  %printf11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double %g10)
  %h = alloca double
  store double 2.000000e+00, double* %h
  %g12 = load double, double* %g9
  %h13 = load double, double* %h
  %i = fdiv double %g12, %h13
  %i14 = alloca double
  store double %i, double* %i14
  %i15 = load double, double* %i14
  %printf16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.3, i32 0, i32 0), double %i15)
  %j = alloca i1
  store i1 false, i1* %j
  %k = alloca i1
  store i1 true, i1* %k
  %j17 = load i1, i1* %j
  %k18 = load i1, i1* %k
  %l = or i1 %j17, %k18
  %l19 = alloca i1
  store i1 %l, i1* %l19
  %l20 = load i1, i1* %l19
  %printf21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i1 %l20)
  %m = alloca i1
  store i1 true, i1* %m
  %n = alloca i1
  store i1 true, i1* %n
  %m22 = load i1, i1* %m
  %n23 = load i1, i1* %n
  %o = and i1 %m22, %n23
  %o24 = alloca i1
  store i1 %o, i1* %o24
  %o25 = load i1, i1* %o24
  %printf26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.5, i32 0, i32 0), i1 %o25)
  %p = alloca i1
  store i1 true, i1* %p
  %q = alloca i1
  store i1 true, i1* %q
  %p27 = load i1, i1* %p
  %q28 = load i1, i1* %q
  %r = and i1 %p27, %q28
  %r29 = alloca i1
  store i1 %r, i1* %r29
  %r30 = load i1, i1* %r29
  %printf31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.6, i32 0, i32 0), i1 %r30)
  %s = alloca i1
  store i1 true, i1* %s
  %t = alloca i1
  store i1 true, i1* %t
  %s32 = load i1, i1* %s
  %t33 = load i1, i1* %t
  %u = or i1 %s32, %t33
  %u34 = alloca i1
  store i1 %u, i1* %u34
  %u35 = load i1, i1* %u34
  %printf36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.7, i32 0, i32 0), i1 %u35)
  ret i32 0
}
