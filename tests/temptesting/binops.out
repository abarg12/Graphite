; ModuleID = 'Graphite'
source_filename = "Graphite"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.7 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %a = alloca i32
  store i32 1, i32* %a
  %b = alloca i32
  store i32 2, i32* %b
  %c = alloca i32
  store i32 3, i32* %c
  %c1 = load i32, i32* %c
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %c1)
  %c2 = load i32, i32* %c
  %c3 = load i32, i32* %c
  %tmp = add i32 %c2, %c3
  %d = alloca i32
  store i32 %tmp, i32* %d
  %d4 = load i32, i32* %d
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %d4)
  %e = alloca double
  store double 0x400A666666666667, double* %e
  %f = alloca double
  store double 6.600000e+00, double* %f
  %e6 = load double, double* %e
  %f7 = load double, double* %f
  %tmp8 = fadd double %e6, %f7
  %g = alloca double
  store double %tmp8, double* %g
  %g9 = load double, double* %g
  %printf10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double %g9)
  %h = alloca double
  store double 2.000000e+00, double* %h
  %g11 = load double, double* %g
  %h12 = load double, double* %h
  %tmp13 = fdiv double %g11, %h12
  %i = alloca double
  store double %tmp13, double* %i
  %i14 = load double, double* %i
  %printf15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.3, i32 0, i32 0), double %i14)
  %j = alloca i1
  store i1 false, i1* %j
  %k = alloca i1
  store i1 true, i1* %k
  %j16 = load i1, i1* %j
  %k17 = load i1, i1* %k
  %tmp18 = or i1 %j16, %k17
  %l = alloca i1
  store i1 %tmp18, i1* %l
  %l19 = load i1, i1* %l
  %printf20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i1 %l19)
  %m = alloca i1
  store i1 true, i1* %m
  %n = alloca i1
  store i1 true, i1* %n
  %m21 = load i1, i1* %m
  %n22 = load i1, i1* %n
  %tmp23 = and i1 %m21, %n22
  %o = alloca i1
  store i1 %tmp23, i1* %o
  %o24 = load i1, i1* %o
  %printf25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.5, i32 0, i32 0), i1 %o24)
  %p = alloca i1
  store i1 true, i1* %p
  %q = alloca i1
  store i1 true, i1* %q
  %p26 = load i1, i1* %p
  %q27 = load i1, i1* %q
  %tmp28 = and i1 %p26, %q27
  %r = alloca i1
  store i1 %tmp28, i1* %r
  %r29 = load i1, i1* %r
  %printf30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.6, i32 0, i32 0), i1 %r29)
  %s = alloca i1
  store i1 true, i1* %s
  %t = alloca i1
  store i1 true, i1* %t
  %s31 = load i1, i1* %s
  %t32 = load i1, i1* %t
  %tmp33 = or i1 %s31, %t32
  %u = alloca i1
  store i1 %tmp33, i1* %u
  %u34 = load i1, i1* %u
  %printf35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.7, i32 0, i32 0), i1 %u34)
  ret i32 0
}
