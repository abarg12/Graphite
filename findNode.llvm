; ModuleID = 'Graphite'
source_filename = "Graphite"

%node_struct = type { i8*, i1, i8* }
%edge_t = type { %node_struct*, %node_struct*, i32 }
%graph_t = type { %node_node*, %edge_node* }
%node_node = type { %node_struct*, %node_node* }
%edge_node = type { %edge_t*, %edge_node* }
%list_node = type { i8*, %list_node* }

@n = global %node_struct* null
@n2 = global %node_struct* null
@n4 = global %node_struct* null
@n7 = global %node_struct* null
@n3 = global %node_struct* null
@e3 = global %edge_t* null
@e4 = global %edge_t* null
@e5 = global %edge_t* null
@g = global %graph_t zeroinitializer
@edgesList = global %list_node* null
@llEdges = global %edge_node* null
@l1 = global %list_node** null
@llNodes = global %node_node* null
@prevNode = global %node_node* null
@found = global i1 false
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llNodes.1 = global %node_node* null
@found2 = global i1 false
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llEdges.3 = global %edge_node* null
@prevEdge = global %edge_node* null
@found3 = global i1 false
@fmt.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llEdges.5 = global %edge_node* null
@found4 = global i1 false
@fmt.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @array_get(i8*, i32, ...)

declare i8* @array_set(i8*, i32, i8*, ...)

declare i8 @nodeExists(%node_struct*, ...)

declare i8* @array_add(i8*, i32, i8*, ...)

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%node_struct* getelementptr (%node_struct, %node_struct* null, i32 1) to i32))
  %node = bitcast i8* %malloccall to %node_struct*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data = bitcast i8* %malloccall1 to i32*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i8** getelementptr (i8*, i8** null, i32 1) to i32))
  %name = bitcast i8* %malloccall2 to i8**
  %data_ptr = bitcast i32* %data to i8*
  %name_ptr = bitcast i8** %name to i8*
  %"name'" = getelementptr inbounds %node_struct, %node_struct* %node, i32 0, i32 0
  %"data'" = getelementptr inbounds %node_struct, %node_struct* %node, i32 0, i32 2
  store i8* %name_ptr, i8** %"name'", align 8
  store i8* %data_ptr, i8** %"data'", align 8
  store %node_struct* %node, %node_struct** @n, align 8
  %malloccall3 = tail call i8* @malloc(i32 ptrtoint (%node_struct* getelementptr (%node_struct, %node_struct* null, i32 1) to i32))
  %node4 = bitcast i8* %malloccall3 to %node_struct*
  %malloccall5 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data6 = bitcast i8* %malloccall5 to i32*
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint (i8** getelementptr (i8*, i8** null, i32 1) to i32))
  %name8 = bitcast i8* %malloccall7 to i8**
  %data_ptr9 = bitcast i32* %data6 to i8*
  %name_ptr10 = bitcast i8** %name8 to i8*
  %"name'11" = getelementptr inbounds %node_struct, %node_struct* %node4, i32 0, i32 0
  %"data'12" = getelementptr inbounds %node_struct, %node_struct* %node4, i32 0, i32 2
  store i8* %name_ptr10, i8** %"name'11", align 8
  store i8* %data_ptr9, i8** %"data'12", align 8
  store %node_struct* %node4, %node_struct** @n2, align 8
  %malloccall13 = tail call i8* @malloc(i32 ptrtoint (%node_struct* getelementptr (%node_struct, %node_struct* null, i32 1) to i32))
  %node14 = bitcast i8* %malloccall13 to %node_struct*
  %malloccall15 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data16 = bitcast i8* %malloccall15 to i32*
  %malloccall17 = tail call i8* @malloc(i32 ptrtoint (i8** getelementptr (i8*, i8** null, i32 1) to i32))
  %name18 = bitcast i8* %malloccall17 to i8**
  %data_ptr19 = bitcast i32* %data16 to i8*
  %name_ptr20 = bitcast i8** %name18 to i8*
  %"name'21" = getelementptr inbounds %node_struct, %node_struct* %node14, i32 0, i32 0
  %"data'22" = getelementptr inbounds %node_struct, %node_struct* %node14, i32 0, i32 2
  store i8* %name_ptr20, i8** %"name'21", align 8
  store i8* %data_ptr19, i8** %"data'22", align 8
  store %node_struct* %node14, %node_struct** @n4, align 8
  %malloccall23 = tail call i8* @malloc(i32 ptrtoint (%node_struct* getelementptr (%node_struct, %node_struct* null, i32 1) to i32))
  %node24 = bitcast i8* %malloccall23 to %node_struct*
  %malloccall25 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data26 = bitcast i8* %malloccall25 to i32*
  %malloccall27 = tail call i8* @malloc(i32 ptrtoint (i8** getelementptr (i8*, i8** null, i32 1) to i32))
  %name28 = bitcast i8* %malloccall27 to i8**
  %data_ptr29 = bitcast i32* %data26 to i8*
  %name_ptr30 = bitcast i8** %name28 to i8*
  %"name'31" = getelementptr inbounds %node_struct, %node_struct* %node24, i32 0, i32 0
  %"data'32" = getelementptr inbounds %node_struct, %node_struct* %node24, i32 0, i32 2
  store i8* %name_ptr30, i8** %"name'31", align 8
  store i8* %data_ptr29, i8** %"data'32", align 8
  store %node_struct* %node24, %node_struct** @n7, align 8
  %malloccall33 = tail call i8* @malloc(i32 ptrtoint (%node_struct* getelementptr (%node_struct, %node_struct* null, i32 1) to i32))
  %node34 = bitcast i8* %malloccall33 to %node_struct*
  %malloccall35 = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %data36 = bitcast i8* %malloccall35 to i32*
  %malloccall37 = tail call i8* @malloc(i32 ptrtoint (i8** getelementptr (i8*, i8** null, i32 1) to i32))
  %name38 = bitcast i8* %malloccall37 to i8**
  %data_ptr39 = bitcast i32* %data36 to i8*
  %name_ptr40 = bitcast i8** %name38 to i8*
  %"name'41" = getelementptr inbounds %node_struct, %node_struct* %node34, i32 0, i32 0
  %"data'42" = getelementptr inbounds %node_struct, %node_struct* %node34, i32 0, i32 2
  store i8* %name_ptr40, i8** %"name'41", align 8
  store i8* %data_ptr39, i8** %"data'42", align 8
  store %node_struct* %node34, %node_struct** @n3, align 8
  %n2 = load %node_struct*, %node_struct** @n2, align 8
  %n = load %node_struct*, %node_struct** @n, align 8
  %malloccall43 = tail call i8* @malloc(i32 ptrtoint (%edge_t* getelementptr (%edge_t, %edge_t* null, i32 1) to i32))
  %myEdgeStruct = bitcast i8* %malloccall43 to %edge_t*
  %"name'44" = getelementptr inbounds %edge_t, %edge_t* %myEdgeStruct, i32 0, i32 0
  %"name'45" = getelementptr inbounds %edge_t, %edge_t* %myEdgeStruct, i32 0, i32 1
  %"name'46" = getelementptr inbounds %edge_t, %edge_t* %myEdgeStruct, i32 0, i32 2
  store %node_struct* %n2, %node_struct** %"name'44", align 8
  store %node_struct* %n, %node_struct** %"name'45", align 8
  store i32 0, i32* %"name'46", align 4
  %malloccall47 = tail call i8* @malloc(i32 ptrtoint (%edge_t* getelementptr (%edge_t, %edge_t* null, i32 1) to i32))
  %edge = bitcast i8* %malloccall47 to %edge_t*
  %"name'48" = getelementptr inbounds %edge_t, %edge_t* %edge, i32 0, i32 0
  %"data'49" = getelementptr inbounds %edge_t, %edge_t* %edge, i32 0, i32 1
  store %node_struct* null, %node_struct** %"name'48", align 8
  store %node_struct* null, %node_struct** %"data'49", align 8
  store %edge_t* %edge, %edge_t** @e3, align 8
  store %edge_t* %myEdgeStruct, %edge_t** @e3, align 8
  %n3 = load %node_struct*, %node_struct** @n3, align 8
  %n250 = load %node_struct*, %node_struct** @n2, align 8
  %malloccall51 = tail call i8* @malloc(i32 ptrtoint (%edge_t* getelementptr (%edge_t, %edge_t* null, i32 1) to i32))
  %myEdgeStruct52 = bitcast i8* %malloccall51 to %edge_t*
  %"name'53" = getelementptr inbounds %edge_t, %edge_t* %myEdgeStruct52, i32 0, i32 0
  %"name'54" = getelementptr inbounds %edge_t, %edge_t* %myEdgeStruct52, i32 0, i32 1
  %"name'55" = getelementptr inbounds %edge_t, %edge_t* %myEdgeStruct52, i32 0, i32 2
  store %node_struct* %n3, %node_struct** %"name'53", align 8
  store %node_struct* %n250, %node_struct** %"name'54", align 8
  store i32 0, i32* %"name'55", align 4
  %malloccall56 = tail call i8* @malloc(i32 ptrtoint (%edge_t* getelementptr (%edge_t, %edge_t* null, i32 1) to i32))
  %edge57 = bitcast i8* %malloccall56 to %edge_t*
  %"name'58" = getelementptr inbounds %edge_t, %edge_t* %edge57, i32 0, i32 0
  %"data'59" = getelementptr inbounds %edge_t, %edge_t* %edge57, i32 0, i32 1
  store %node_struct* null, %node_struct** %"name'58", align 8
  store %node_struct* null, %node_struct** %"data'59", align 8
  store %edge_t* %edge57, %edge_t** @e4, align 8
  store %edge_t* %myEdgeStruct52, %edge_t** @e4, align 8
  %malloccall60 = tail call i8* @malloc(i32 ptrtoint (%edge_t* getelementptr (%edge_t, %edge_t* null, i32 1) to i32))
  %edge61 = bitcast i8* %malloccall60 to %edge_t*
  %"src''" = getelementptr inbounds %edge_t, %edge_t* %edge61, i32 0, i32 0
  %"dst''" = getelementptr inbounds %edge_t, %edge_t* %edge61, i32 0, i32 1
  store %node_struct* null, %node_struct** %"src''", align 8
  store %node_struct* null, %node_struct** %"dst''", align 8
  store %edge_t* %edge61, %edge_t** @e5, align 8
  %n7 = load %node_struct*, %node_struct** @n7, align 8
  %nodes_hd = load %node_node*, %node_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 0), align 8
  %malloccall62 = tail call i8* @malloc(i32 ptrtoint (%node_node* getelementptr (%node_node, %node_node* null, i32 1) to i32))
  %new_node = bitcast i8* %malloccall62 to %node_node*
  %"lst_rst'" = getelementptr inbounds %node_node, %node_node* %new_node, i32 0, i32 1
  %node_ptr = getelementptr inbounds %node_node, %node_node* %new_node, i32 0, i32 0
  store %node_node* %nodes_hd, %node_node** %"lst_rst'", align 8
  store %node_struct* %n7, %node_struct** %node_ptr, align 8
  store %node_node* %new_node, %node_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 0), align 8
  %e3 = load %edge_t*, %edge_t** @e3, align 8
  %edges_hd = load %edge_node*, %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  %malloccall63 = tail call i8* @malloc(i32 ptrtoint (%edge_node* getelementptr (%edge_node, %edge_node* null, i32 1) to i32))
  %new_edge = bitcast i8* %malloccall63 to %edge_node*
  %"lst_rst'64" = getelementptr inbounds %edge_node, %edge_node* %new_edge, i32 0, i32 1
  %edge_ptr = getelementptr inbounds %edge_node, %edge_node* %new_edge, i32 0, i32 0
  store %edge_node* %edges_hd, %edge_node** %"lst_rst'64", align 8
  store %edge_t* %e3, %edge_t** %edge_ptr, align 8
  store %edge_node* %new_edge, %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  %e4 = load %edge_t*, %edge_t** @e4, align 8
  %edges_hd65 = load %edge_node*, %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  %malloccall66 = tail call i8* @malloc(i32 ptrtoint (%edge_node* getelementptr (%edge_node, %edge_node* null, i32 1) to i32))
  %new_edge67 = bitcast i8* %malloccall66 to %edge_node*
  %"lst_rst'68" = getelementptr inbounds %edge_node, %edge_node* %new_edge67, i32 0, i32 1
  %edge_ptr69 = getelementptr inbounds %edge_node, %edge_node* %new_edge67, i32 0, i32 0
  store %edge_node* %edges_hd65, %edge_node** %"lst_rst'68", align 8
  store %edge_t* %e4, %edge_t** %edge_ptr69, align 8
  store %edge_node* %new_edge67, %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  %n270 = load %node_struct*, %node_struct** @n2, align 8
  %head = load %edge_node*, %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  store %edge_node* %head, %edge_node** @llEdges, align 8
  br label %while

while:                                            ; preds = %entry, %else
  %putMeHere = load %edge_node*, %edge_node** @llEdges, align 8
  %curr = icmp ne %edge_node* %putMeHere, null
  br i1 %curr, label %while_body, label %merge

while_body:                                       ; preds = %while
  %putMeHere71 = load %edge_node*, %edge_node** @llEdges, align 8
  %nodes = getelementptr inbounds %edge_node, %edge_node* %putMeHere71, i32 0, i32 0
  %"stored_node'" = load %edge_t*, %edge_t** %nodes, align 8
  br label %if

if:                                               ; preds = %while_body
  %nodes72 = getelementptr inbounds %edge_t, %edge_t* %"stored_node'", i32 0, i32 0
  %nodes73 = getelementptr inbounds %edge_t, %edge_t* %"stored_node'", i32 0, i32 1
  %"currEdgeSrc'" = load %node_struct*, %node_struct** %nodes72, align 8
  %"currEdgeDst'" = load %node_struct*, %node_struct** %nodes73, align 8
  %"foundSrc?" = icmp eq %node_struct* %"currEdgeSrc'", %n270
  %"foundDst?" = icmp eq %node_struct* %"currEdgeDst'", %n270
  %if_found = or i1 %"foundSrc?", %"foundDst?"
  br i1 %if_found, label %then, label %else

then:                                             ; preds = %if
  %malloccall74 = tail call i8* @malloc(i32 ptrtoint (%list_node* getelementptr (%list_node, %list_node* null, i32 1) to i32))
  %node75 = bitcast i8* %malloccall74 to %list_node*
  %nodes76 = getelementptr inbounds %list_node, %list_node* %node75, i32 0, i32 0
  %nodes77 = getelementptr inbounds %list_node, %list_node* %node75, i32 0, i32 1
  %currEdgeVoidPtr = bitcast %edge_t* %"stored_node'" to i8*
  store i8* %currEdgeVoidPtr, i8** %nodes76, align 8
  %nextEdges = load %list_node*, %list_node** @edgesList, align 8
  store %list_node* %nextEdges, %list_node** %nodes77, align 8
  store %list_node* %node75, %list_node** @edgesList, align 8
  br label %else

else:                                             ; preds = %then, %if
  %toBeHere = load %edge_node*, %edge_node** @llEdges, align 8
  %llNodesPtr = getelementptr inbounds %edge_node, %edge_node* %toBeHere, i32 0, i32 1
  %toBeHerenow = load %edge_node*, %edge_node** %llNodesPtr, align 8
  store %edge_node* %toBeHerenow, %edge_node** @llEdges, align 8
  br label %while

merge:                                            ; preds = %while
  %n278 = load %node_struct*, %node_struct** @n2, align 8
  store %list_node** @edgesList, %list_node*** @l1, align 8
  %ret_true = alloca i1, align 1
  store i1 false, i1* %ret_true, align 1
  %n779 = load %node_struct*, %node_struct** @n7, align 8
  %head80 = load %node_node*, %node_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 0), align 8
  store %node_node* %head80, %node_node** @prevNode, align 8
  store %node_node* %head80, %node_node** @llNodes, align 8
  br label %while81

while81:                                          ; preds = %merge, %else92
  %putMeHere82 = load %node_node*, %node_node** @llNodes, align 8
  %curr83 = icmp ne %node_node* %putMeHere82, null
  br i1 %curr83, label %while_body84, label %merge93

while_body84:                                     ; preds = %while81
  %putMeHere85 = load %node_node*, %node_node** @llNodes, align 8
  %nodes86 = getelementptr inbounds %node_node, %node_node* %putMeHere85, i32 0, i32 0
  %"stored_node'87" = load %node_struct*, %node_struct** %nodes86, align 8
  br label %if88

if88:                                             ; preds = %while_body84
  %"found?" = icmp eq %node_struct* %"stored_node'87", %n779
  br i1 %"found?", label %then89, label %else92

then89:                                           ; preds = %if88
  %toBeHere94 = load %node_node*, %node_node** @llNodes, align 8
  %toBeHere95 = load %node_node*, %node_node** @prevNode, align 8
  %"found?96" = icmp eq %node_node* %toBeHere94, %toBeHere95
  br i1 %"found?96", label %then91, label %then90

then90:                                           ; preds = %then89
  %loadHere = load %node_node*, %node_node** @prevNode, align 8
  %nxtNode = getelementptr inbounds %node_node, %node_node* %loadHere, i32 0, i32 1
  %nodesmore = getelementptr inbounds %node_node, %node_node* %toBeHere94, i32 0, i32 1
  %"stored_nodemore'" = load %node_node*, %node_node** %nodesmore, align 8
  store %node_node* %"stored_nodemore'", %node_node** %nxtNode, align 8
  store i1 true, i1* %ret_true, align 1
  br label %merge93

then91:                                           ; preds = %then89
  %nodesmore97 = getelementptr inbounds %node_node, %node_node* %toBeHere94, i32 0, i32 1
  %"stored_nodemore'98" = load %node_node*, %node_node** %nodesmore97, align 8
  store %node_node* %"stored_nodemore'98", %node_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 0), align 8
  store i1 true, i1* %ret_true, align 1
  br label %merge93

else92:                                           ; preds = %if88
  %toBeHere99 = load %node_node*, %node_node** @llNodes, align 8
  %llNodesPtr100 = getelementptr inbounds %node_node, %node_node* %toBeHere99, i32 0, i32 1
  %toBeHerenow101 = load %node_node*, %node_node** %llNodesPtr100, align 8
  store %node_node* %toBeHerenow101, %node_node** @llNodes, align 8
  br label %while81

merge93:                                          ; preds = %while81, %then91, %then90
  %returnVal = load i1, i1* %ret_true, align 1
  store i1 %returnVal, i1* @found, align 1
  %found = load i1, i1* @found, align 1
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 %found)
  %ret_true102 = alloca i1, align 1
  store i1 false, i1* %ret_true102, align 1
  %n3103 = load %node_struct*, %node_struct** @n3, align 8
  %head104 = load %node_node*, %node_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 0), align 8
  store %node_node* %head104, %node_node** @llNodes.1, align 8
  br label %while105

while105:                                         ; preds = %merge93, %else114
  %putMeHere106 = load %node_node*, %node_node** @llNodes.1, align 8
  %curr107 = icmp ne %node_node* %putMeHere106, null
  br i1 %curr107, label %while_body108, label %merge115

while_body108:                                    ; preds = %while105
  %putMeHere109 = load %node_node*, %node_node** @llNodes.1, align 8
  %nodes110 = getelementptr inbounds %node_node, %node_node* %putMeHere109, i32 0, i32 0
  %"stored_node'111" = load %node_struct*, %node_struct** %nodes110, align 8
  br label %if112

if112:                                            ; preds = %while_body108
  %"found?116" = icmp eq %node_struct* %"stored_node'111", %n3103
  br i1 %"found?116", label %then113, label %else114

then113:                                          ; preds = %if112
  store i1 true, i1* %ret_true102, align 1
  br label %merge115

else114:                                          ; preds = %if112
  %toBeHere117 = load %node_node*, %node_node** @llNodes.1, align 8
  %llNodesPtr118 = getelementptr inbounds %node_node, %node_node* %toBeHere117, i32 0, i32 1
  %toBeHerenow119 = load %node_node*, %node_node** %llNodesPtr118, align 8
  store %node_node* %toBeHerenow119, %node_node** @llNodes.1, align 8
  br label %while105

merge115:                                         ; preds = %while105, %then113
  %n3120 = load %node_struct*, %node_struct** @n3, align 8
  %returnVal121 = load i1, i1* %ret_true102, align 1
  store i1 %returnVal121, i1* @found2, align 1
  %found2 = load i1, i1* @found2, align 1
  %printf122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i1 %found2)
  %ret_true123 = alloca i1, align 1
  store i1 false, i1* %ret_true123, align 1
  %e4124 = load %edge_t*, %edge_t** @e4, align 8
  %head125 = load %edge_node*, %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  store %edge_node* %head125, %edge_node** @prevEdge, align 8
  store %edge_node* %head125, %edge_node** @llEdges.3, align 8
  br label %while126

while126:                                         ; preds = %merge115, %else135
  %putMeHere127 = load %edge_node*, %edge_node** @llEdges.3, align 8
  %curr128 = icmp ne %edge_node* %putMeHere127, null
  br i1 %curr128, label %while_body129, label %merge136

while_body129:                                    ; preds = %while126
  %putMeHere130 = load %edge_node*, %edge_node** @llEdges.3, align 8
  %edges = getelementptr inbounds %edge_node, %edge_node* %putMeHere130, i32 0, i32 0
  %"stored_edge'" = load %edge_t*, %edge_t** %edges, align 8
  br label %if131

if131:                                            ; preds = %while_body129
  %"found?137" = icmp eq %edge_t* %"stored_edge'", %e4124
  br i1 %"found?137", label %then132, label %else135

then132:                                          ; preds = %if131
  %toBeHere138 = load %edge_node*, %edge_node** @llEdges.3, align 8
  %toBeHere139 = load %edge_node*, %edge_node** @prevEdge, align 8
  %"found?140" = icmp eq %edge_node* %toBeHere138, %toBeHere139
  br i1 %"found?140", label %then134, label %then133

then133:                                          ; preds = %then132
  %loadHere141 = load %edge_node*, %edge_node** @prevEdge, align 8
  %nxtEdge = getelementptr inbounds %edge_node, %edge_node* %loadHere141, i32 0, i32 1
  %edgesmore = getelementptr inbounds %edge_node, %edge_node* %toBeHere138, i32 0, i32 1
  %"stored_edgemore'" = load %edge_node*, %edge_node** %edgesmore, align 8
  store %edge_node* %"stored_edgemore'", %edge_node** %nxtEdge, align 8
  store i1 true, i1* %ret_true123, align 1
  br label %merge136

then134:                                          ; preds = %then132
  %edgesmore142 = getelementptr inbounds %edge_node, %edge_node* %toBeHere138, i32 0, i32 1
  %"stored_edgemore'143" = load %edge_node*, %edge_node** %edgesmore142, align 8
  store %edge_node* %"stored_edgemore'143", %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  store i1 true, i1* %ret_true123, align 1
  br label %merge136

else135:                                          ; preds = %if131
  %toBeHere144 = load %edge_node*, %edge_node** @llEdges.3, align 8
  %llEdgesPtr = getelementptr inbounds %edge_node, %edge_node* %toBeHere144, i32 0, i32 1
  %toBeHerenow145 = load %edge_node*, %edge_node** %llEdgesPtr, align 8
  store %edge_node* %toBeHerenow145, %edge_node** @llEdges.3, align 8
  br label %while126

merge136:                                         ; preds = %while126, %then134, %then133
  %returnVal146 = load i1, i1* %ret_true123, align 1
  store i1 %returnVal146, i1* @found3, align 1
  %found3 = load i1, i1* @found3, align 1
  %printf147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i1 %found3)
  %ret_true148 = alloca i1, align 1
  store i1 false, i1* %ret_true148, align 1
  %e4149 = load %edge_t*, %edge_t** @e4, align 8
  %head150 = load %edge_node*, %edge_node** getelementptr inbounds (%graph_t, %graph_t* @g, i32 0, i32 1), align 8
  store %edge_node* %head150, %edge_node** @llEdges.5, align 8
  br label %while151

while151:                                         ; preds = %merge136, %else160
  %putMeHere152 = load %edge_node*, %edge_node** @llEdges.5, align 8
  %curr153 = icmp ne %edge_node* %putMeHere152, null
  br i1 %curr153, label %while_body154, label %merge161

while_body154:                                    ; preds = %while151
  %putMeHere155 = load %edge_node*, %edge_node** @llEdges.5, align 8
  %nodes156 = getelementptr inbounds %edge_node, %edge_node* %putMeHere155, i32 0, i32 0
  %"stored_node'157" = load %edge_t*, %edge_t** %nodes156, align 8
  br label %if158

if158:                                            ; preds = %while_body154
  %"found?162" = icmp eq %edge_t* %"stored_node'157", %e4149
  br i1 %"found?162", label %then159, label %else160

then159:                                          ; preds = %if158
  store i1 true, i1* %ret_true148, align 1
  br label %merge161

else160:                                          ; preds = %if158
  %toBeHere163 = load %edge_node*, %edge_node** @llEdges.5, align 8
  %llNodesPtr164 = getelementptr inbounds %edge_node, %edge_node* %toBeHere163, i32 0, i32 1
  %toBeHerenow165 = load %edge_node*, %edge_node** %llNodesPtr164, align 8
  store %edge_node* %toBeHerenow165, %edge_node** @llEdges.5, align 8
  br label %while151

merge161:                                         ; preds = %while151, %then159
  %e4166 = load %edge_t*, %edge_t** @e4, align 8
  %returnVal167 = load i1, i1* %ret_true148, align 1
  store i1 %returnVal167, i1* @found4, align 1
  %found4 = load i1, i1* @found4, align 1
  %printf168 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.6, i32 0, i32 0), i1 %found4)
  ret i32 0
}

declare noalias i8* @malloc(i32)
